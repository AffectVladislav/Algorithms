    #   Напишите функцию draw_triangle(), которая выводит звездный равнобедренный треугольник с основанием и высотой равными
    # 15 и 8 соответственно:

def draw_triangle():
    for i in range(8):
        print(' ' * (8 - 1 - i) + "*" * (1 + i * 2 ))

# основная программа
draw_triangle()  # вызов функции

    #   Интернет-магазин осуществляет экспресс доставку для своих товаров по цене
    # 1000 рублей за первый товар и 120 рублей за каждый последующий товар. Напишите функцию get_shipping_cost(quantity),
    # которая принимает в качестве аргумента натуральное число quantity – количество товаров в заказе – и возвращает стоимость доставки.

def get_shipping_cost(quantity):
    return 1000 + (quantity - 1) * 120

# считываем данные
n = int(input())

# вызываем функцию
print(get_shipping_cost(n))

    #   Напишите функцию compute_binom(n, k), которая принимает в качестве аргументов два натуральных числа n и k и возвращает
    #   Факториалом натурального числа называется произведение всех натуральных чисел от 1 до n
    #   Биномиальный коэффициент______________________

# объявление функции
from math import factorial as f
def compute_binom(n, k):
    return f(n) // (f(k) * f(n - k))

# считываем данные
n = int(input())
k = int(input())

# вызываем функцию
print(compute_binom(n, k))

    #   Число словами
    #   Напишите функцию number_to_words(num),
    #   которая принимает в качестве аргумента натуральное число num и возвращает его словесное описание на русском языке.

# объявление функции
def number_to_words(num):
    s = ['один', 'два', 'три', 'четыре', 'пять', 'шесть', 'семь', 'восемь', 'девять', 'десять', 'одиннадцать', 'двенадцать', 'тринадцать', 'четырнадцать', 'пятнадцать', 'шестнадцать', 'семнадцать', 'восемнадцать', 'девятнадцать', 'двадцать', '']
    s2 = ['двадцать', 'тридцать', 'сорок', 'пятьдесят', 'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто']
    if num <= 20:
        return s[num - 1]
    else:
        return s2[num // 10 - 2] + ' ' + s[num % 10 - 1]


    # считываем данные
n = int(input())

    # вызываем функцию
print(number_to_words(n))

    #   Напишите функцию get_month(language, number), которая принимает на вход два аргумента
    #   language – язык ru или en и number – номер месяца (от 1 до 12) и
    #   возвращает название месяца на русском или английском языке.

def get_month(language, number):
    en = ['', 'january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october',
          'november', 'december']

    ru = ['', 'январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь',
          'декабрь']
    if language == 'ru':
        return ru[number]
    if language == 'en':
        return en[number]
print(get_month('ru', 1))
print(get_month('ru', 12))
print(get_month('en', 1))
print(get_month('en', 10))


    #   Магическая дата – это дата, когда день, умноженный на месяц, равен числу, образованному последними двумя цифрами года.
# объявление функции
def is_magic(date):
    s = date.split('.')
    if int(s[0]) * int(s[1]) == int(s[2]) % 100:
        return True
    return False

# считываем данные
date = input()

# вызываем функцию
print(is_magic(date))


    #   Панграммы
    #   Панграмма – это фраза, содержащая в себе все буквы алфавита.
    #   Обычно панграммы используют для презентации шрифтов, чтобы можно было в одной фразе рассмотреть все глифы.

# объявление функции
def is_pangram(text):
    s = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
    text = text.replace(' ', '')
    text = text.lower()
    for i in s:
        if i not in text:
            return False
    return True
# считываем данные
text = input()

# вызываем функцию
print(is_pangram(text))